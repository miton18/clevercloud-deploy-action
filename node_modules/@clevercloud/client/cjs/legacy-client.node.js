"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.initCleverClient = initCleverClient;

var _baconjs = _interopRequireDefault(require("baconjs"));

var _oauthNode = require("./oauth.node.js");

var _sendLegacyRequest = require("./send-legacy-request.js");

var _legacyClient = require("./api/v2/legacy-client.js");

var _prefixUrl = require("./prefix-url.js");

var _requestSuperagent = require("./request.superagent.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function initCleverClient(config) {
  const legacyClient = (0, _legacyClient.initLegacyClient)((clientFn, pathParamNames = []) => {
    return () => (0, _sendLegacyRequest.sendLegacyRequest)((req, body) => {
      const params = { ...req.query
      };
      pathParamNames.forEach((paramName, i) => {
        params[paramName] = req.params[i];
      });
      const restCallPromise = clientFn(params, body).then((0, _prefixUrl.prefixUrl)(config.API_HOST)).then((0, _oauthNode.addOauthHeader)(config)).then(_requestSuperagent.request);
      return _baconjs.default.fromPromise(restCallPromise);
    });
  }); // add special "owner" helper function

  legacyClient.owner = function (ownerId) {
    return ownerId != null && ownerId.includes('orga_') ? legacyClient.organisations._ : legacyClient.self;
  };

  return legacyClient;
}